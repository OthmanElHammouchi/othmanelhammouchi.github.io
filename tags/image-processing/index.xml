<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>image processing on Othman El Hammouchi</title>
    <link>https://othmanelhammouchi.com/tags/image-processing/</link>
    <description>Recent content in image processing on Othman El Hammouchi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 21 Apr 2024 16:51:00 +0200</lastBuildDate><atom:link href="https://othmanelhammouchi.com/tags/image-processing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Encore: segmenting colour images with Mumford-Shah</title>
      <link>https://othmanelhammouchi.com/posts/mumford-shah-colour/</link>
      <pubDate>Sun, 21 Apr 2024 16:51:00 +0200</pubDate>
      
      <guid>https://othmanelhammouchi.com/posts/mumford-shah-colour/</guid>
      <description>I wanted to write a final post in my series on Mumford-Shah segmentation to explain how the approach we detailed so far could be extended for colour images. This time, our working example will be this charming picture of Paul Erd≈ës with child prodigy Terrence Tao:
Mathematics transcending age barriers
In this case, both our image and cartoon will have three components (one for each primary colour),
$$ \begin{cases} \boldsymbol{g} = (g_1, g_2, g_3) \\[2em] \boldsymbol{u} = (u_1, u_2, u_3) \end{cases} $$</description>
    </item>
    
    <item>
      <title>Mumford Shah Segmentation: Implementing the Algorithm</title>
      <link>https://othmanelhammouchi.com/posts/mumford-shah-implementation/</link>
      <pubDate>Sun, 14 Aug 2022 16:43:54 +0200</pubDate>
      
      <guid>https://othmanelhammouchi.com/posts/mumford-shah-implementation/</guid>
      <description>In the previous article, we discussed the challenges with the numerical implementation of the Mumford-Shah functional and defined a series of approximations which allow us to overcome them. This allowed us in turn to derive the Euler-Lagrange PDEs
$$ \begin{cases} \displaystyle (u - g) - \nabla \cdot (v^2 \nabla u) = 0 \\[1em] \displaystyle v \Vert \nabla u \Vert^2 - \frac{1 - v}{4\epsilon} - \epsilon \Delta v = 0 \end{cases} $$</description>
    </item>
    
    <item>
      <title>Mumford-Shah Segmentation: Deriving the Equations</title>
      <link>https://othmanelhammouchi.com/posts/mumford-shah-equations/</link>
      <pubDate>Sun, 14 Aug 2022 16:43:54 +0200</pubDate>
      
      <guid>https://othmanelhammouchi.com/posts/mumford-shah-equations/</guid>
      <description>In the previous post, we saw how the Mumford-Shah model finds a segmentation of an image $g$ by solving the variational problem
$$ \underset{(u, k) \in \mathcal{A}}{\rm{argmin}} \, J[u, K] $$
where
$$ \begin{equation} \label{eq:ms-functional} J[u, K] = \int_{\Omega}(u - g)^2 \, dx + \int_{\Omega \setminus K}\left \Vert \nabla u \right \Vert ^2 \, dx + \mathcal{H}^1(K) \end{equation} $$
is the Mumford-Shah functional and
$$ \mathcal{A} = \left \lbrace (u, K) \ \vert \ K \subseteq \Omega \ \text{closed}, \ u \in C^1(\Omega \setminus K) \right \rbrace $$</description>
    </item>
    
    <item>
      <title>Image Segmentation using the Mumford-Shah functional</title>
      <link>https://othmanelhammouchi.com/posts/mumford-shah-intro/</link>
      <pubDate>Sun, 14 Aug 2022 16:43:53 +0200</pubDate>
      
      <guid>https://othmanelhammouchi.com/posts/mumford-shah-intro/</guid>
      <description>Segmentation is the process of partitioning an image into a set of regions representing different surfaces and determining the contours which seperate them. This results in a simplified representation (often called a cartoon) which can then be used in all manner of downstream tasks, from medical imaging tools for assisting physicians to computer vision models. The power of image segmentation (as with all data science applications) lies in its ability to condense information, reducing a high-dimensional input with lots of superfluous detail to a streamlined representation which can be more easily parsed and processed.</description>
    </item>
    
  </channel>
</rss>
